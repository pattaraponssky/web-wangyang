import win32com.client
import csv
from datetime import datetime

# === ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö HEC-RAS ===
hec = win32com.client.Dispatch("RAS630.HECRASController")  # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö HEC-RAS 6.3

# === ‡∏£‡∏∞‡∏ö‡∏∏‡∏û‡∏≤‡∏ò‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ HEC-RAS ‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå CSV ===
project_file = r"C:\wangyang\RAS_Wangyang1D\Wangyang1D.prj"
csv_file = r"C:\xampp\htdocs\website\ras-output\output_ras.csv"

# === ‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ HEC-RAS ===
hec.Project_Open(project_file)

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
current_project = hec.Project_Current()
if not current_project:
    print("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ HEC-RAS ‡πÑ‡∏î‡πâ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏û‡∏≤‡∏ò‡πÑ‡∏ü‡∏•‡πå .prj")
    exit()

print(f"‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {current_project}")

# === ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏°‡πà‡∏ô‡πâ‡∏≥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ===
rivers = [2, 1]  # ‡πÅ‡∏°‡πà‡∏ô‡πâ‡∏≥ 1 ‡πÅ‡∏•‡∏∞ ‡πÅ‡∏°‡πà‡∏ô‡πâ‡∏≥ 2

# === ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ===
data = [["Date", "Cross Section",  "Water_Elevation"]]  # ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥
profiles = hec.Output_GetProfiles(1)[1]
profiles = list(profiles)
print(len(profiles))

for round_index in range(len(profiles)-1):
    profile_index = 1 + round_index
    # profile_index = 24 + (round_index * 24)
    # === ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡πÅ‡∏°‡πà‡∏ô‡πâ‡∏≥ 1 ‡πÅ‡∏•‡∏∞ 2 ===
    for river in rivers:
        nodes_info = hec.Output_GetNodes(river, 1)  # ‡πÉ‡∏ä‡πâ Reach ‡∏ó‡∏µ‡πà 1
        num_river, num_reach, num_stations = nodes_info[:3]
        nodes = list(hec.Geometry_GetNodes(river, 1)[3])
        print(f"‡πÅ‡∏°‡πà‡∏ô‡πâ‡∏≥ {river} ‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏à‡∏∏‡∏î‡∏ï‡∏±‡∏î‡∏Ç‡∏ß‡∏≤‡∏á: {num_stations}")

        if num_stations == 0:
            print(f"‡πÅ‡∏°‡πà‡∏ô‡πâ‡∏≥ {river} ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏∏‡∏î‡∏ï‡∏±‡∏î‡∏Ç‡∏ß‡∏≤‡∏á ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå .prj")
            continue
        
        for i in range(num_stations):
            # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥ (Water Surface Elevation) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Profile_index ‡πÅ‡∏•‡∏∞ Time Step ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
            water_elevation = hec.Output_NodeOutput(river, 1, i + 1, None, profile_index, 2)[0]
            
            # ‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô DD/MM/YYYY HH:MM
            try:
                profile_datetime = datetime.strptime(profiles[profile_index], "%d%b%Y %H%M")
                formatted_datetime = profile_datetime.strftime("%d/%m/%Y %H:%M")
            except ValueError:
                formatted_datetime = profiles[profile_index]  # ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏î‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
            
            print(f"üìç{profile_index} ‡πÅ‡∏°‡πà‡∏ô‡πâ‡∏≥ {river}, CrossSection {nodes[i]} Date {formatted_datetime}: water_elevation={water_elevation}")
            data.append([formatted_datetime,nodes[i], water_elevation])  # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

# === ‡∏õ‡∏¥‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ ===
hec.Project_Close()

# === ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå CSV ===
with open(csv_file, mode="w", newline="") as file:
    writer = csv.writer(file)
    writer.writerows(data)

print(f"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå CSV ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: {csv_file}")

