<?php
header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Methods: GET, POST, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type, Authorization");
// กำหนดพิกัด lat, lon และชื่อที่ต้องการ
$target_points = [
'15.859123,102.436325' => 'SB-01',
'15.859123,102.51946' => 'SB-01',
'15.939072,102.436325' => 'SB-01',
'15.939072,102.51946' => 'SB-01',
'15.939072,102.6026' => 'SB-01',
'15.939072,102.68574' => 'SB-01',
'15.939072,102.76887' => 'SB-01',
'15.939072,102.852005' => 'SB-01',
'16.018997,102.436325' => 'SB-01',
'16.018997,102.51946' => 'SB-01',
'16.018997,102.6026' => 'SB-01',
'16.018997,102.68574' => 'SB-01',
'16.018997,102.76887' => 'SB-01',
'16.018997,102.852005' => 'SB-01',
'16.018997,102.93514' => 'SB-01',
'16.098892,102.35319' => 'SB-01',
'16.098892,102.436325' => 'SB-01',
'16.098892,102.51946' => 'SB-01',
'16.098892,102.6026' => 'SB-01',
'16.098892,102.68574' => 'SB-01',
'16.098892,102.76887' => 'SB-01',
'16.098892,102.852005' => 'SB-01',
'16.17875,102.35319' => 'SB-01',
'16.17875,102.436325' => 'SB-01',
'16.17875,102.51946' => 'SB-01',
'16.17875,102.6026' => 'SB-01',
'16.17875,102.68574' => 'SB-01',
'16.17875,102.76887' => 'SB-01',
'16.17875,102.852005' => 'SB-01',
'16.258575,102.436325' => 'SB-01',
'16.258575,102.51946' => 'SB-01',
'16.258575,102.6026' => 'SB-01',
'16.258575,102.68574' => 'SB-01',
'16.258575,102.76887' => 'SB-01',
'16.258575,102.852005' => 'SB-01',
'16.338371,102.436325' => 'SB-01',
'16.338371,102.51946' => 'SB-01',
'16.338371,102.6026' => 'SB-01',
'16.338371,102.68574' => 'SB-01',
'16.338371,102.76887' => 'SB-01',
'16.338371,102.852005' => 'SB-01',
'16.338371,102.93514' => 'SB-01',
'16.418129,102.436325' => 'SB-01',
'16.418129,102.6026' => 'SB-01',
'16.418129,102.68574' => 'SB-01',
'16.418129,102.76887' => 'SB-01',
'16.418129,102.852005' => 'SB-01',
'16.418129,102.93514' => 'SB-01',
'16.497871,102.6026' => 'SB-01',
'16.497871,102.68574' => 'SB-01',
'16.497871,102.76887' => 'SB-01',
'16.57756,102.6026' => 'SB-01',
'16.57756,102.68574' => 'SB-01',
'16.657227,102.6026' => 'SB-01',
'16.418129,102.852005' => 'SB-02',
'16.418129,102.93514' => 'SB-02',
'16.418129,103.01828' => 'SB-02',
'16.497871,102.76887' => 'SB-02',
'16.497871,102.852005' => 'SB-02',
'16.497871,102.93514' => 'SB-02',
'16.497871,103.01828' => 'SB-02',
'16.497871,103.10142' => 'SB-02',
'16.57756,102.68574' => 'SB-02',
'16.57756,102.76887' => 'SB-02',
'16.57756,102.852005' => 'SB-02',
'16.57756,102.93514' => 'SB-02',
'16.57756,103.01828' => 'SB-02',
'16.57756,103.10142' => 'SB-02',
'16.57756,103.18455' => 'SB-02',
'16.657227,102.6026' => 'SB-02',
'16.657227,102.68574' => 'SB-02',
'16.657227,102.76887' => 'SB-02',
'16.657227,102.852005' => 'SB-02',
'16.657227,102.93514' => 'SB-02',
'16.657227,103.01828' => 'SB-02',
'16.657227,103.10142' => 'SB-02',
'16.657227,103.18455' => 'SB-02',
'16.736855,102.6026' => 'SB-02',
'16.736855,102.68574' => 'SB-02',
'16.736855,102.76887' => 'SB-02',
'16.736855,102.852005' => 'SB-02',
'16.736855,102.93514' => 'SB-02',
'16.736855,103.01828' => 'SB-02',
'16.736855,103.10142' => 'SB-02',
'16.736855,103.18455' => 'SB-02',
'16.816452,102.6026' => 'SB-02',
'16.816452,102.68574' => 'SB-02',
'16.816452,102.76887' => 'SB-02',
'16.816452,102.852005' => 'SB-02',
'16.816452,102.93514' => 'SB-02',
'16.816452,103.01828' => 'SB-02',
'16.816452,103.10142' => 'SB-02',
'16.816452,103.18455' => 'SB-02',
'16.896017,102.68574' => 'SB-02',
'16.896017,102.76887' => 'SB-02',
'16.896017,102.852005' => 'SB-02',
'16.896017,102.93514' => 'SB-02',
'16.896017,103.18455' => 'SB-02',
'16.975548,102.68574' => 'SB-02',
'16.975548,102.76887' => 'SB-02',
'16.975548,102.852005' => 'SB-02',
'17.055046,102.68574' => 'SB-02',
'17.055046,102.76887' => 'SB-02',
'16.018997,102.93514' => 'SB-03',
'16.018997,103.01828' => 'SB-03',
'16.018997,103.10142' => 'SB-03',
'16.018997,103.18455' => 'SB-03',
'16.018997,103.267685' => 'SB-03',
'16.098892,102.852005' => 'SB-03',
'16.098892,102.93514' => 'SB-03',
'16.098892,103.01828' => 'SB-03',
'16.098892,103.10142' => 'SB-03',
'16.098892,103.18455' => 'SB-03',
'16.098892,103.267685' => 'SB-03',
'16.098892,103.35082' => 'SB-03',
'16.17875,102.852005' => 'SB-03',
'16.17875,102.93514' => 'SB-03',
'16.17875,103.01828' => 'SB-03',
'16.17875,103.10142' => 'SB-03',
'16.17875,103.18455' => 'SB-03',
'16.17875,103.267685' => 'SB-03',
'16.17875,103.35082' => 'SB-03',
'16.17875,103.43396' => 'SB-03',
'16.258575,102.852005' => 'SB-03',
'16.258575,102.93514' => 'SB-03',
'16.258575,103.01828' => 'SB-03',
'16.258575,103.10142' => 'SB-03',
'16.258575,103.18455' => 'SB-03',
'16.258575,103.267685' => 'SB-03',
'16.258575,103.35082' => 'SB-03',
'16.258575,103.43396' => 'SB-03',
'16.338371,102.93514' => 'SB-03',
'16.338371,103.01828' => 'SB-03',
'16.338371,103.10142' => 'SB-03',
'16.338371,103.18455' => 'SB-03',
'16.338371,103.267685' => 'SB-03',
'16.418129,103.01828' => 'SB-03',
'16.418129,103.10142' => 'SB-03',
'16.418129,103.18455' => 'SB-03',
'16.497871,103.10142' => 'SB-03',
'16.497871,103.18455' => 'SB-03',
'15.939072,103.43396' => 'SB-04',
'15.939072,103.5171' => 'SB-04',
'16.018997,103.35082' => 'SB-04',
'16.018997,103.43396' => 'SB-04',
'16.018997,103.5171' => 'SB-04',
'16.018997,103.60023' => 'SB-04',
'16.098892,103.35082' => 'SB-04',
'16.098892,103.43396' => 'SB-04',
'16.098892,103.5171' => 'SB-04',
'16.098892,103.60023' => 'SB-04',
'16.098892,103.683365' => 'SB-04',
'16.17875,103.43396' => 'SB-04',
'16.17875,103.5171' => 'SB-04',
'16.17875,103.60023' => 'SB-04',
'16.17875,103.683365' => 'SB-04',
'16.258575,103.43396' => 'SB-04',
'16.258575,103.5171' => 'SB-04',
'16.258575,103.60023' => 'SB-04',
'16.258575,103.683365' => 'SB-04',
'16.258575,103.267685' => 'SB-05',
'16.258575,103.43396' => 'SB-05',
'16.338371,103.18455' => 'SB-05',
'16.338371,103.267685' => 'SB-05',
'16.338371,103.35082' => 'SB-05',
'16.338371,103.43396' => 'SB-05',
'16.338371,103.5171' => 'SB-05',
'16.418129,103.18455' => 'SB-05',
'16.418129,103.267685' => 'SB-05',
'16.418129,103.35082' => 'SB-05',
'16.418129,103.43396' => 'SB-05',
'16.418129,103.5171' => 'SB-05',
'16.418129,103.60023' => 'SB-05',
'16.418129,103.683365' => 'SB-05',
'16.418129,103.7665' => 'SB-05',
'16.418129,103.84964' => 'SB-05',
'16.497871,103.18455' => 'SB-05',
'16.497871,103.267685' => 'SB-05',
'16.497871,103.35082' => 'SB-05',
'16.497871,103.43396' => 'SB-05',
'16.497871,103.5171' => 'SB-05',
'16.497871,103.60023' => 'SB-05',
'16.497871,103.683365' => 'SB-05',
'16.497871,103.7665' => 'SB-05',
'16.497871,103.84964' => 'SB-05',
'16.57756,103.35082' => 'SB-05',
'16.57756,103.43396' => 'SB-05',
'16.57756,103.5171' => 'SB-05',
'16.57756,103.60023' => 'SB-05',
'16.57756,103.683365' => 'SB-05',
'16.57756,103.7665' => 'SB-05',
'16.657227,103.5171' => 'SB-05',
'16.657227,103.60023' => 'SB-05',
'16.657227,103.683365' => 'SB-05',
'16.657227,103.7665' => 'SB-05',
'16.736855,103.60023' => 'SB-05',
'16.736855,103.683365' => 'SB-06',
'16.258575,103.60023' => 'SB-06',
'16.258575,103.683365' => 'SB-06',
'16.338371,103.5171' => 'SB-06',
'16.338371,103.60023' => 'SB-06',
'16.338371,103.683365' => 'SB-06',
'16.338371,103.7665' => 'SB-06',
'16.418129,103.5171' => 'SB-06',
'16.418129,103.60023' => 'SB-06',
'16.418129,103.683365' => 'SB-06',
'16.418129,103.7665' => 'SB-06',
'16.17875,103.683365' => 'SB-07',
'16.17875,103.7665' => 'SB-07',
'16.258575,103.683365' => 'SB-07',
'16.258575,103.7665' => 'SB-07',
'16.338371,103.7665' => 'SB-07',
];
function find_file_by_date($base_dir, $date, $prefix = "p24h.d01.") {
    $time_slots = ["18", "12", "06", "00"]; // ช่วงเวลาที่ต้องการไล่หา
    foreach ($time_slots as $slot) {
        $filename = $base_dir . $prefix . $date . $slot . ".csv";
        if (file_exists($filename)) {
            return $filename; // หากพบไฟล์ ให้คืนค่าชื่อไฟล์
        }
    }
    return false; // หากไม่พบไฟล์
}

// กำหนดวันปัจจุบันในรูปแบบ YYYYMMDD
$current_date = date("Ymd");

// กำหนดที่อยู่ของไฟล์ที่ต้องการตรวจสอบ
$base_dir = "./rain_grid/";

// ค้นหาไฟล์ที่มีชื่อจากวันที่ปัจจุบัน
$filename = find_file_by_date($base_dir, $current_date);

if (!$filename) {
    // ลองย้อนหาวันที่ย้อนหลัง 3 วัน
    for ($i = 1; $i <= 3; $i++) {
        $prev_date = date("Ymd", strtotime("-{$i} day", strtotime($current_date)));
        $filename = find_file_by_date($base_dir, $prev_date);
        
        if ($filename) {
            break; // เจอไฟล์แล้ว ออกจากลูป
        }
    }
}

if (!$filename) {
    echo json_encode(["error" => "ไม่พบไฟล์ย้อนหลัง 3 วัน"]);
    exit;
}

// ถ้าพบไฟล์แล้ว ให้ทำการโหลดไฟล์ CSV
$data = [];
$headers = [];
$count_data = []; // ใช้นับจำนวนข้อมูลแต่ละคอลัมน์
if (($handle = fopen($filename, "r")) !== false) {
    while (($row = fgetcsv($handle, 0, ",", '"', "\\")) !== false) {
        if (empty($headers)) {
            // ดึงหัวข้อคอลัมน์
            $headers = $row;
            continue;
        }

        // จับคู่ข้อมูลตามหัวข้อคอลัมน์
        $row_assoc = array_combine($headers, $row);
        $lat_lon = $row_assoc["lat"] . "," . $row_assoc["lon"];

        // ตรวจสอบว่าพิกัดอยู่ในรายการที่กำหนดหรือไม่
        if (isset($target_points[$lat_lon])) {
            $name = $target_points[$lat_lon];

            // รวมข้อมูลตามชื่อสถานีและวันที่
            foreach ($row_assoc as $key_column => $value) {
                if ($key_column != "lat" && $key_column != "lon") {
                    $date = $key_column;  // วันที่จากชื่อคอลัมน์
                    // ตรวจสอบว่าเป็นตัวเลขก่อนที่จะรวมค่า
                    $float_value = is_numeric($value) ? floatval($value) : 0;

                    // สร้างคีย์ที่ประกอบด้วยสถานีและวันที่
                    $key = $name;
                    if (!isset($data[$key])) {
                        $data[$key] = [
                            "values" => []
                        ];
                        $count_data[$key] = [];
                    }

                    // เพิ่มค่าผลรวม
                    if (!isset($data[$key]["values"][$key_column])) {
                        $data[$key]["values"][$key_column] = 0;
                        $count_data[$key][$key_column] = 0;
                    }
                    $data[$key]["values"][$key_column] += $float_value;
                    $count_data[$key][$key_column]++; // เพิ่มจำนวนข้อมูลที่ใช้รวมค่า
                }
            }
        }
    }
    fclose($handle);
}

// คำนวณค่าเฉลี่ยโดยการหารค่าผลรวมด้วยจำนวนข้อมูลที่ใช้รวมค่า
foreach ($data as $key => &$station) {
    foreach ($station["values"] as $date => &$value) {
        if ($count_data[$key][$date] > 0) {
            $value = $value / $count_data[$key][$date]; // คำนวณค่าเฉลี่ย
        }
    }
}

// สร้าง JSON เป็นผลลัพธ์
header('Content-Type: application/json');
echo json_encode($data, JSON_PRETTY_PRINT);
?>

